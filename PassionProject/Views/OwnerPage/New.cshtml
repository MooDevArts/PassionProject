@model PassionProject.Models.OwnerDto
@{
    ViewData["Title"] = "Create Owner";
}

<div class="container">
    <h1>Create Owner</h1>

    <form asp-action="Create">
        <div class="form-group">
            <label asp-for="FirstName" class="control-label"></label>
            <input asp-for="FirstName" class="form-control" />
            <span asp-validation-for="FirstName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="LastName" class="control-label"></label>
            <input asp-for="LastName" class="form-control" />
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Contact" class="control-label"></label>
            <input asp-for="Contact" class="form-control" />
            <span asp-validation-for="Contact" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>Cars</label>
            @if (Model.Cars != null && Model.Cars.Any())
            {
                <select asp-for="CarId" class="form-control" multiple="multiple" name="selectedCarIds">
                    @foreach (var car in Model.Cars)
                    {
                        <option value="@car.CarId">@car.Make - @car.Model (@car.Year)</option>
                    }
                </select>
            }
            else
            {
                <p>No cars available.</p>
            }
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Create</button>
        </div>
    </form>
    <div class="mt-3">
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

